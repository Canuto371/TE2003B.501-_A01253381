# Reading pref.tcl
# //  Questa Intel Starter FPGA Edition-64
# //  Version 2023.3 win64 Jul 17 2023
# //
# //  Copyright 1991-2023 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  QuestaSim and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# do Single_Cycle_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Questa Intel Starter FPGA Edition-64 vmap 2023.3 Lib Mapping Utility 2023.07 Jul 17 2023
# vmap work rtl_work 
# Copying c:/intelfpga_lite/23.1std/questa_fse/win64/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2 {C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/main.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 12:07:34 on Jun 09,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2" C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/main.v 
# -- Compiling module main
# 
# Top level modules:
# 	main
# End time: 12:07:34 on Jun 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2 {C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/ALU.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 12:07:34 on Jun 09,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2" C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/ALU.v 
# -- Compiling module ALU
# 
# Top level modules:
# 	ALU
# End time: 12:07:34 on Jun 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2 {C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/alu_decoder.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 12:07:34 on Jun 09,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2" C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/alu_decoder.v 
# -- Compiling module alu_decoder
# 
# Top level modules:
# 	alu_decoder
# End time: 12:07:34 on Jun 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2 {C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/control_unit.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 12:07:34 on Jun 09,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2" C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/control_unit.v 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 12:07:34 on Jun 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2 {C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/data_memory.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 12:07:34 on Jun 09,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2" C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 12:07:34 on Jun 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2 {C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/extend.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 12:07:34 on Jun 09,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2" C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/extend.v 
# -- Compiling module extend
# 
# Top level modules:
# 	extend
# End time: 12:07:34 on Jun 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2 {C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/main_decoder.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 12:07:34 on Jun 09,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2" C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/main_decoder.v 
# -- Compiling module main_decoder
# 
# Top level modules:
# 	main_decoder
# End time: 12:07:34 on Jun 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2 {C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/register_file.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 12:07:34 on Jun 09,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2" C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 12:07:34 on Jun 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2 {C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/instruction_memory.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 12:07:34 on Jun 09,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2" C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/instruction_memory.v 
# -- Compiling module instruction_memory
# 
# Top level modules:
# 	instruction_memory
# End time: 12:07:35 on Jun 09,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2 {C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/main_tb.v}
# Questa Intel Starter FPGA Edition-64 vlog 2023.3 Compiler 2023.07 Jul 17 2023
# Start time: 12:07:35 on Jun 09,2025
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2" C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/main_tb.v 
# -- Compiling module main_tb
# 
# Top level modules:
# 	main_tb
# End time: 12:07:35 on Jun 09,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L fiftyfivenm_ver -L rtl_work -L work -voptargs="+acc"  main_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L fiftyfivenm_ver -L rtl_work -L work -voptargs=""+acc"" main_tb 
# Start time: 12:07:35 on Jun 09,2025
# ** Note: (vsim-3812) Design is being optimized...
# ** Warning: (vopt-10587) Some optimizations are turned off because the +acc switch is in effect. This will cause your simulation to run slowly. Please use -access/-debug to maintain needed visibility.
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading work.main_tb(fast)
# Loading work.main(fast)
# Loading work.instruction_memory(fast)
# Loading work.register_file(fast)
# Loading work.extend(fast)
# Loading work.ALU(fast)
# Loading work.data_memory(fast)
# Loading work.control_unit(fast)
# Loading work.main_decoder(fast)
# Loading work.alu_decoder(fast)
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# INSTRUCTION_MEM: Loaded instructions from instructions.mem
# ALU: alu_control=000, SrcA=00000000, SrcB=00000000 -> result=00000000, zero=1
# ALU: alu_control=000, SrcA=00000000, SrcB=00000005 -> result=00000005, zero=0
# t=                   0 | PC=00000000 | Instr=00500113
# REG_FILE: VALID WRITE: REG[2] = 00000005 (A1=0 RD1=00000000, A2=5 RD2=xxxxxxxx) at time=                  10
# REG_FILE: VALID WRITE: REG[2] = 00000005 (A1=0 RD1=00000000, A2=5 RD2=xxxxxxxx) at time=                  30
# ALU: alu_control=000, SrcA=00000000, SrcB=0000000c -> result=0000000c, zero=0
# t=                  30 | PC=00000004 | Instr=00c00193
# REG_FILE: VALID WRITE: REG[3] = 0000000c (A1=0 RD1=00000000, A2=12 RD2=xxxxxxxx) at time=                  50
# ALU: alu_control=001, SrcA=0000000c, SrcB=fffffff7 -> result=00000015, zero=0
# t=                  50 | PC=00000008 | Instr=ff718393
# REG_FILE: VALID WRITE: REG[7] = 00000015 (A1=3 RD1=0000000c, A2=23 RD2=xxxxxxxx) at time=                  70
# ALU: alu_control=011, SrcA=00000015, SrcB=00000005 -> result=00000015, zero=0
# t=                  70 | PC=0000000c | Instr=0023e233
# REG_FILE: VALID WRITE: REG[4] = 00000015 (A1=7 RD1=00000015, A2=2 RD2=00000005) at time=                  90
# ALU: alu_control=010, SrcA=0000000c, SrcB=00000015 -> result=00000004, zero=0
# t=                  90 | PC=00000010 | Instr=0041f2b3
# REG_FILE: VALID WRITE: REG[5] = 00000004 (A1=3 RD1=0000000c, A2=4 RD2=00000015) at time=                 110
# ALU: alu_control=000, SrcA=00000004, SrcB=00000015 -> result=00000019, zero=0
# t=                 110 | PC=00000014 | Instr=004282b3
# REG_FILE: VALID WRITE: REG[5] = 00000019 (A1=5 RD1=00000004, A2=4 RD2=00000015) at time=                 130
# ALU: alu_control=000, SrcA=00000019, SrcB=00000015 -> result=0000002e, zero=0
# ALU: alu_control=101, SrcA=0000000c, SrcB=00000015 -> result=00000001, zero=0
# t=                 130 | PC=00000018 | Instr=0041a233
# REG_FILE: VALID WRITE: REG[4] = 00000001 (A1=3 RD1=0000000c, A2=4 RD2=00000015) at time=                 150
# ALU: alu_control=101, SrcA=0000000c, SrcB=00000001 -> result=00000000, zero=1
# ALU: alu_control=000, SrcA=00000019, SrcB=00000015 -> result=0000002e, zero=0
# ALU: alu_control=001, SrcA=00000019, SrcB=00000015 -> result=00000004, zero=0
# t=                 150 | PC=0000001c | Instr=02728863
# ALU: alu_control=001, SrcA=00000001, SrcB=00000000 -> result=00000001, zero=0
# t=                 170 | PC=00000020 | Instr=00020463
# ALU: alu_control=001, SrcA=00000000, SrcB=00000804 -> result=fffff7fc, zero=0
# ALU: alu_control=000, SrcA=00000000, SrcB=00000000 -> result=00000000, zero=1
# t=                 190 | PC=00000024 | Instr=00000293
# REG_FILE: VALID WRITE: REG[5] = 00000000 (A1=0 RD1=00000000, A2=0 RD2=00000000) at time=                 210
# ALU: alu_control=101, SrcA=00000015, SrcB=00000005 -> result=00000000, zero=1
# t=                 210 | PC=00000028 | Instr=0023a233
# REG_FILE: VALID WRITE: REG[4] = 00000000 (A1=7 RD1=00000015, A2=2 RD2=00000005) at time=                 230
# ALU: alu_control=000, SrcA=00000000, SrcB=00000000 -> result=00000000, zero=1
# t=                 230 | PC=0000002c | Instr=005203b3
# REG_FILE: VALID WRITE: REG[7] = 00000000 (A1=4 RD1=00000000, A2=5 RD2=00000000) at time=                 250
# ALU: alu_control=001, SrcA=00000000, SrcB=00000005 -> result=fffffffb, zero=0
# t=                 250 | PC=00000030 | Instr=402383b3
# REG_FILE: VALID WRITE: REG[7] = fffffffb (A1=7 RD1=00000000, A2=2 RD2=00000005) at time=                 270
# DATA_MEM: WARNING: Read access out of bounds at Addr=fffffffb at time=                 270
# ALU: alu_control=001, SrcA=fffffffb, SrcB=00000005 -> result=fffffff6, zero=0
# ALU: alu_control=101, SrcA=0000000c, SrcB=00000047 -> result=00000001, zero=0
# ALU: alu_control=000, SrcA=0000000c, SrcB=00000054 -> result=00000060, zero=0
# t=                 270 | PC=00000034 | Instr=0471aa23
# DATA_MEM: Write Addr=00000060, Data=fffffffb at time=                 290
# ALU: alu_control=000, SrcA=00000000, SrcB=00000062 -> result=00000062, zero=0
# ALU: alu_control=000, SrcA=00000000, SrcB=00000060 -> result=00000060, zero=0
# t=                 290 | PC=00000038 | Instr=06002103
# REG_FILE: VALID WRITE: REG[2] = fffffffb (A1=0 RD1=00000000, A2=0 RD2=00000000) at time=                 310
# ALU: alu_control=000, SrcA=fffffffb, SrcB=00000000 -> result=fffffffb, zero=0
# t=                 310 | PC=0000003c | Instr=005104b3
# REG_FILE: VALID WRITE: REG[9] = fffffffb (A1=2 RD1=fffffffb, A2=5 RD2=00000000) at time=                 330
# DATA_MEM: WARNING: Read access out of bounds at Addr=fffffffb at time=                 330
# ALU: alu_control=000, SrcA=00000000, SrcB=00000001 -> result=00000001, zero=0
# t=                 330 | PC=00000040 | Instr=00100113
# REG_FILE: VALID WRITE: REG[2] = 00000001 (A1=0 RD1=00000000, A2=1 RD2=xxxxxxxx) at time=                 350
# ALU: alu_control=000, SrcA=00000001, SrcB=fffffffb -> result=fffffffc, zero=0
# t=                 350 | PC=00000044 | Instr=00910133
# REG_FILE: VALID WRITE: REG[2] = fffffffc (A1=2 RD1=00000001, A2=9 RD2=fffffffb) at time=                 370
# DATA_MEM: WARNING: Read access out of bounds at Addr=fffffffc at time=                 370
# ALU: alu_control=000, SrcA=fffffffc, SrcB=fffffffb -> result=fffffff7, zero=0
# ALU: alu_control=101, SrcA=0000000c, SrcB=00000022 -> result=00000001, zero=0
# ALU: alu_control=000, SrcA=0000000c, SrcB=00000020 -> result=0000002c, zero=0
# t=                 370 | PC=00000048 | Instr=0221a023
# DATA_MEM: Write Addr=0000002c, Data=fffffffc at time=                 390
# ALU: alu_control=000, SrcA=fffffffc, SrcB=fffffffc -> result=fffffff8, zero=0
# ALU: alu_control=001, SrcA=fffffffc, SrcB=fffffffc -> result=00000000, zero=1
# t=                 390 | PC=0000004c | Instr=00210063
# ** Note: $stop    : C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/main_tb.v(30)
#    Time: 5020 ps  Iteration: 0  Instance: /main_tb
# Break in Module main_tb at C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/main_tb.v line 30
add wave -position end  sim:/main_tb/DUT/alu_result
add wave -position end  sim:/main_tb/DUT/regWrite
add wave -position end  sim:/main_tb/DUT/memWrite
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-8009) Loading existing optimized design _opt
# ** Note: (vsim-12126) Error and warning message counts have been restored: Errors=0, Warnings=1.
# Loading work.main_tb(fast)
# Loading work.main(fast)
# Loading work.instruction_memory(fast)
# Loading work.register_file(fast)
# Loading work.extend(fast)
# Loading work.ALU(fast)
# Loading work.data_memory(fast)
# Loading work.control_unit(fast)
# Loading work.main_decoder(fast)
# Loading work.alu_decoder(fast)
run -all
# INSTRUCTION_MEM: Loaded instructions from instructions.mem
# ALU: alu_control=000, SrcA=00000000, SrcB=00000000 -> result=00000000, zero=1
# ALU: alu_control=000, SrcA=00000000, SrcB=00000005 -> result=00000005, zero=0
# t=                   0 | PC=00000000 | Instr=00500113
# REG_FILE: VALID WRITE: REG[2] = 00000005 (A1=0 RD1=00000000, A2=5 RD2=xxxxxxxx) at time=                  10
# REG_FILE: VALID WRITE: REG[2] = 00000005 (A1=0 RD1=00000000, A2=5 RD2=xxxxxxxx) at time=                  30
# ALU: alu_control=000, SrcA=00000000, SrcB=0000000c -> result=0000000c, zero=0
# t=                  30 | PC=00000004 | Instr=00c00193
# REG_FILE: VALID WRITE: REG[3] = 0000000c (A1=0 RD1=00000000, A2=12 RD2=xxxxxxxx) at time=                  50
# ALU: alu_control=001, SrcA=0000000c, SrcB=fffffff7 -> result=00000015, zero=0
# t=                  50 | PC=00000008 | Instr=ff718393
# REG_FILE: VALID WRITE: REG[7] = 00000015 (A1=3 RD1=0000000c, A2=23 RD2=xxxxxxxx) at time=                  70
# ALU: alu_control=011, SrcA=00000015, SrcB=00000005 -> result=00000015, zero=0
# t=                  70 | PC=0000000c | Instr=0023e233
# REG_FILE: VALID WRITE: REG[4] = 00000015 (A1=7 RD1=00000015, A2=2 RD2=00000005) at time=                  90
# ALU: alu_control=010, SrcA=0000000c, SrcB=00000015 -> result=00000004, zero=0
# t=                  90 | PC=00000010 | Instr=0041f2b3
# REG_FILE: VALID WRITE: REG[5] = 00000004 (A1=3 RD1=0000000c, A2=4 RD2=00000015) at time=                 110
# ALU: alu_control=000, SrcA=00000004, SrcB=00000015 -> result=00000019, zero=0
# t=                 110 | PC=00000014 | Instr=004282b3
# REG_FILE: VALID WRITE: REG[5] = 00000019 (A1=5 RD1=00000004, A2=4 RD2=00000015) at time=                 130
# ALU: alu_control=000, SrcA=00000019, SrcB=00000015 -> result=0000002e, zero=0
# ALU: alu_control=101, SrcA=0000000c, SrcB=00000015 -> result=00000001, zero=0
# t=                 130 | PC=00000018 | Instr=0041a233
# REG_FILE: VALID WRITE: REG[4] = 00000001 (A1=3 RD1=0000000c, A2=4 RD2=00000015) at time=                 150
# ALU: alu_control=101, SrcA=0000000c, SrcB=00000001 -> result=00000000, zero=1
# ALU: alu_control=000, SrcA=00000019, SrcB=00000015 -> result=0000002e, zero=0
# ALU: alu_control=001, SrcA=00000019, SrcB=00000015 -> result=00000004, zero=0
# t=                 150 | PC=0000001c | Instr=02728863
# ALU: alu_control=001, SrcA=00000001, SrcB=00000000 -> result=00000001, zero=0
# t=                 170 | PC=00000020 | Instr=00020463
# ALU: alu_control=001, SrcA=00000000, SrcB=00000804 -> result=fffff7fc, zero=0
# ALU: alu_control=000, SrcA=00000000, SrcB=00000000 -> result=00000000, zero=1
# t=                 190 | PC=00000024 | Instr=00000293
# REG_FILE: VALID WRITE: REG[5] = 00000000 (A1=0 RD1=00000000, A2=0 RD2=00000000) at time=                 210
# ALU: alu_control=101, SrcA=00000015, SrcB=00000005 -> result=00000000, zero=1
# t=                 210 | PC=00000028 | Instr=0023a233
# REG_FILE: VALID WRITE: REG[4] = 00000000 (A1=7 RD1=00000015, A2=2 RD2=00000005) at time=                 230
# ALU: alu_control=000, SrcA=00000000, SrcB=00000000 -> result=00000000, zero=1
# t=                 230 | PC=0000002c | Instr=005203b3
# REG_FILE: VALID WRITE: REG[7] = 00000000 (A1=4 RD1=00000000, A2=5 RD2=00000000) at time=                 250
# ALU: alu_control=001, SrcA=00000000, SrcB=00000005 -> result=fffffffb, zero=0
# t=                 250 | PC=00000030 | Instr=402383b3
# REG_FILE: VALID WRITE: REG[7] = fffffffb (A1=7 RD1=00000000, A2=2 RD2=00000005) at time=                 270
# DATA_MEM: WARNING: Read access out of bounds at Addr=fffffffb at time=                 270
# ALU: alu_control=001, SrcA=fffffffb, SrcB=00000005 -> result=fffffff6, zero=0
# ALU: alu_control=101, SrcA=0000000c, SrcB=00000047 -> result=00000001, zero=0
# ALU: alu_control=000, SrcA=0000000c, SrcB=00000054 -> result=00000060, zero=0
# t=                 270 | PC=00000034 | Instr=0471aa23
# DATA_MEM: Write Addr=00000060, Data=fffffffb at time=                 290
# ALU: alu_control=000, SrcA=00000000, SrcB=00000062 -> result=00000062, zero=0
# ALU: alu_control=000, SrcA=00000000, SrcB=00000060 -> result=00000060, zero=0
# t=                 290 | PC=00000038 | Instr=06002103
# REG_FILE: VALID WRITE: REG[2] = fffffffb (A1=0 RD1=00000000, A2=0 RD2=00000000) at time=                 310
# ALU: alu_control=000, SrcA=fffffffb, SrcB=00000000 -> result=fffffffb, zero=0
# t=                 310 | PC=0000003c | Instr=005104b3
# REG_FILE: VALID WRITE: REG[9] = fffffffb (A1=2 RD1=fffffffb, A2=5 RD2=00000000) at time=                 330
# DATA_MEM: WARNING: Read access out of bounds at Addr=fffffffb at time=                 330
# ALU: alu_control=000, SrcA=00000000, SrcB=00000001 -> result=00000001, zero=0
# t=                 330 | PC=00000040 | Instr=00100113
# REG_FILE: VALID WRITE: REG[2] = 00000001 (A1=0 RD1=00000000, A2=1 RD2=xxxxxxxx) at time=                 350
# ALU: alu_control=000, SrcA=00000001, SrcB=fffffffb -> result=fffffffc, zero=0
# t=                 350 | PC=00000044 | Instr=00910133
# REG_FILE: VALID WRITE: REG[2] = fffffffc (A1=2 RD1=00000001, A2=9 RD2=fffffffb) at time=                 370
# DATA_MEM: WARNING: Read access out of bounds at Addr=fffffffc at time=                 370
# ALU: alu_control=000, SrcA=fffffffc, SrcB=fffffffb -> result=fffffff7, zero=0
# ALU: alu_control=101, SrcA=0000000c, SrcB=00000022 -> result=00000001, zero=0
# ALU: alu_control=000, SrcA=0000000c, SrcB=00000020 -> result=0000002c, zero=0
# t=                 370 | PC=00000048 | Instr=0221a023
# DATA_MEM: Write Addr=0000002c, Data=fffffffc at time=                 390
# ALU: alu_control=000, SrcA=fffffffc, SrcB=fffffffc -> result=fffffff8, zero=0
# ALU: alu_control=001, SrcA=fffffffc, SrcB=fffffffc -> result=00000000, zero=1
# t=                 390 | PC=0000004c | Instr=00210063
# ** Note: $stop    : C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/main_tb.v(30)
#    Time: 5020 ps  Iteration: 0  Instance: /main_tb
# Break in Module main_tb at C:/Users/eliza/TE2003B.501-_A01253381/Single-Cycle-2/main_tb.v line 30
# End time: 12:11:17 on Jun 09,2025, Elapsed time: 0:03:42
# Errors: 0, Warnings: 1
